#include <stdio.h>
#include <stdlib.h>

int main() {
    int *ptr;
    int size = 5;
    int new_size = 10;

    // Dynamically allocate memory for the initial array
    ptr = (int *)malloc(size * sizeof(int));
    if (ptr == NULL) {
        printf("Memory allocation failed.\n");
        return 1;
    }

    // Initialize the array with values
    for (int i = 0; i < size; i++) {
        ptr[i] = i + 1;
    }

    // Print the initial array
    printf("Initial array:\n");
    for (int i = 0; i < size; i++) {
        printf("%d ", ptr[i]);
    }
    printf("\n");

    // Resize the array using realloc
    int *temp = (int *)realloc(ptr, new_size * sizeof(int));
    if (temp == NULL) {
        printf("Memory reallocation failed.\n");
        free(ptr);
        return 1;
    }
    ptr = temp;

    // Initialize the new elements of the array
    for (int i = size; i < new_size; i++) {
        ptr[i] = i + 1;
    }

    // Print the resized array
    printf("Resized array:\n");
    for (int i = 0; i < new_size; i++) {
        printf("%d ", ptr[i]);
    }
    printf("\n");

    // Free the allocated memory
    free(ptr);
    return 0;
}
